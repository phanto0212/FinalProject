import React, { useState, useEffect } from 'react';
import { Rate, Button, message, Spin } from 'antd';
import {
  ClockCircleOutlined,
  FireOutlined,
  UserOutlined,
  TeamOutlined,
  HeartOutlined,
  ShareAltOutlined,
  BookOutlined,
  StarOutlined,
  TrophyOutlined,
  CrownOutlined
} from '@ant-design/icons';

import {
  DetailContainer,
  HeaderSection,
  HeroImage,
  HeroContent,
  RecipeTitle,
  RecipeSubtitle,
  MetaInfo,
  MetaItem,
  ContentSection,
  MainContent,
  Sidebar,
  IngredientsCard,
  IngredientsList,
  IngredientItem,
  IngredientIcon,
  IngredientText,
  InstructionsSection,
  SectionTitle,
  StepsList,
  StepItem,
  StepContent,
  NutritionCard,
  NutritionGrid,
  NutritionItem,
  NutritionValue,
  NutritionLabel,
  RatingSection,
  RatingDisplay,
  RatingValue,
  RatingCount,
  ActionButtons,
  ActionButton,
  ChefSection,
  ChefInfo,
  ChefAvatar,
  ChefDetails,
  ChefName,
  ChefTitle,
  ChefBio,
  TagsSection,
  RecipeTag,
  ResponsiveWrapper,
  LoadingSkeleton
} from './style';
import { useParams } from 'react-router-dom';

const RecipeDetailComponent = ({ recipeId, recipeData, loading }) => {
  const [userRating, setUserRating] = useState(0);
  const [isFavorited, setIsFavorited] = useState(false);
  const [servingSize, setServingSize] = useState(4);
  // Sample data - thay th·∫ø b·∫±ng data th·ª±c t·ª´ props ho·∫∑c API
  const defaultRecipe = {
    id: 1,
    title: "Ph·ªü B√≤ H√† N·ªôi Truy·ªÅn Th·ªëng",
    subtitle: "M√≥n ph·ªü b√≤ ƒë·∫≠m ƒë√† v·ªõi n∆∞·ªõc d√πng trong v·∫Øt, th∆°m ngon ƒë·∫∑c tr∆∞ng c·ªßa H√† N·ªôi c·ªï",
    image: "https://images.unsplash.com/photo-1559847844-5315695dadae?w=800&h=600&fit=crop",
    cookTime: 180,
    difficulty: "Kh√≥",
    servings: 4,
    rating: 4.8,
    reviewCount: 245,
    calories: 350,
    
    ingredients: [
      { name: "X∆∞∆°ng b√≤", amount: "1kg" },
      { name: "Th·ªãt b√≤ t√°i", amount: "300g" },
      { name: "B√°nh ph·ªü t∆∞∆°i", amount: "400g" },
      { name: "H√†nh t√¢y", amount: "2 c·ªß" },
      { name: "G·ª´ng t∆∞∆°i", amount: "80g" },
      { name: "Qu·∫ø", amount: "2 thanh" },
      { name: "Hoa h·ªìi", amount: "3 b√¥ng" },
      { name: "Th·∫£o qu·∫£", amount: "2 qu·∫£" },
      { name: "H√†nh l√°", amount: "50g" },
      { name: "Gi√° ƒë·ªó", amount: "200g" },
      { name: "Rau th∆°m", amount: "1 b√≥" },
      { name: "N∆∞·ªõc m·∫Øm", amount: "3 tbsp" },
      { name: "Mu·ªëi", amount: "1 tsp" },
      { name: "ƒê∆∞·ªùng", amount: "1 tsp" }
    ],
    
    instructions: [
      "R·ª≠a s·∫°ch x∆∞∆°ng b√≤, blanch qua n∆∞·ªõc s√¥i ƒë·ªÉ lo·∫°i b·ªè t·∫°p ch·∫•t v√† m√πi h√¥i. Sau ƒë√≥ r·ª≠a l·∫°i v·ªõi n∆∞·ªõc l·∫°nh.",
      "N∆∞·ªõng h√†nh t√¢y v√† g·ª´ng tr√™n b·∫øp gas ho·∫∑c l√≤ n∆∞·ªõng cho ƒë·∫øn khi th∆°m v√† h∆°i ch√°y b·ªÅ m·∫∑t.",
      "Rang c√°c lo·∫°i gia v·ªã (qu·∫ø, hoa h·ªìi, th·∫£o qu·∫£) tr√™n ch·∫£o kh√¥ cho th∆°m, sau ƒë√≥ b·ªçc trong t√∫i v·∫£i.",
      "Cho x∆∞∆°ng v√†o n·ªìi to, ƒë·ªï n∆∞·ªõc ng·∫≠p x∆∞∆°ng kho·∫£ng 3-4cm. Th√™m h√†nh t√¢y, g·ª´ng n∆∞·ªõng v√† t√∫i gia v·ªã.",
      "ƒêun s√¥i r·ªìi h·∫° nh·ªè l·ª≠a, ninh trong 2-3 ti·∫øng. V·ªõt b·ªçt th∆∞·ªùng xuy√™n ƒë·ªÉ n∆∞·ªõc d√πng trong.",
      "N√™m n∆∞·ªõc d√πng v·ªõi n∆∞·ªõc m·∫Øm, mu·ªëi, ƒë∆∞·ªùng v·ª´a ƒÉn. L·ªçc b·ªè x√°c ƒë·ªÉ ƒë∆∞·ª£c n∆∞·ªõc d√πng trong v·∫Øt.",
      "Th√°i th·ªãt b√≤ t√°i m·ªèng, chu·∫©n b·ªã rau th∆°m, gi√° ƒë·ªó, h√†nh l√° th√°i nh·ªè.",
      "Lu·ªôc b√°nh ph·ªü qua n∆∞·ªõc s√¥i, cho v√†o t√¥. ƒê·∫∑t th·ªãt b√≤ t√°i l√™n tr√™n.",
      "Chan n∆∞·ªõc d√πng s√¥i v√†o t√¥, th·ªãt b√≤ s·∫Ω ch√≠n t√°i. R·∫Øc h√†nh l√° v√† ƒÉn k√®m rau th∆°m, gi√° ƒë·ªó."
    ],
    
    nutrition: {
      calories: 350,
      protein: "28g",
      carbs: "45g",
      fat: "8g"
    },
    
    chef: {
      name: "Chef Nguy·ªÖn VƒÉn Minh",
      title: "Chuy√™n gia ·∫©m th·ª±c Vi·ªát",
      avatar: "https://images.unsplash.com/photo-1556909114-f6e7ad7d3136?w=100&h=100&fit=crop&crop=face",
      bio: "15 nƒÉm kinh nghi·ªám trong ·∫©m th·ª±c truy·ªÅn th·ªëng Vi·ªát Nam, t·ª´ng l√†m vi·ªác t·∫°i c√°c nh√† h√†ng 5 sao."
    },
    
    tags: []
  };

  const recipe = recipeData || defaultRecipe;

  // Handle rating change
  const handleRatingChange = (value) => {
    setUserRating(value);
    message.success(`B·∫°n ƒë√£ ƒë√°nh gi√° ${value} sao cho c√¥ng th·ª©c n√†y!`);
  };

  // Handle favorite toggle
  const handleFavorite = () => {
    setIsFavorited(!isFavorited);
    message.success(isFavorited ? 'ƒê√£ b·ªè kh·ªèi danh s√°ch y√™u th√≠ch' : 'ƒê√£ th√™m v√†o danh s√°ch y√™u th√≠ch');
  };

  // Handle share
  const handleShare = () => {
    if (navigator.share) {
      navigator.share({
        title: recipe.title,
        text: recipe.subtitle,
        url: window.location.href,
      });
    } else {
      // Fallback - copy to clipboard
      navigator.clipboard.writeText(window.location.href);
      message.success('ƒê√£ copy link c√¥ng th·ª©c!');
    }
  };

  // Loading state
  if (loading) {
    return (
      <DetailContainer>
        <div style={{ textAlign: 'center', padding: '60px 0' }}>
          <Spin size="large" />
          <div style={{ marginTop: '20px', fontSize: '1.1rem', color: '#666' }}>
            ƒêang t·∫£i c√¥ng th·ª©c...
          </div>
        </div>
      </DetailContainer>
    );
  }

  return (
    <ResponsiveWrapper>
      <DetailContainer>
        {/* Header Section v·ªõi Hero Image */}
        <HeaderSection>
          <HeroImage image={recipe.image}>
            <HeroContent>
              <RecipeTitle>{recipe.title}</RecipeTitle>
              <RecipeSubtitle>{recipe.subtitle}</RecipeSubtitle>
              
              <MetaInfo>
                <MetaItem>
                  <ClockCircleOutlined />
                  <span>{Math.floor(recipe.cookTime / 60)}h {recipe.cookTime % 60}m</span>
                </MetaItem>
                <MetaItem>
                  <FireOutlined />
                  <span>{recipe.difficulty}</span>
                </MetaItem>
                <MetaItem>
                  <TeamOutlined />
                  <span>{recipe.servings} ng∆∞·ªùi</span>
                </MetaItem>
                <MetaItem>
                  <StarOutlined />
                  <span>{recipe.rating} ({recipe.reviewCount} ƒë√°nh gi√°)</span>
                </MetaItem>
              </MetaInfo>
            </HeroContent>
          </HeroImage>
        </HeaderSection>

        <ContentSection>
          {/* Main Content */}
          <MainContent>
            {/* Instructions */}
            <InstructionsSection>
              <SectionTitle>
                <BookOutlined />
                H∆∞·ªõng D·∫´n Th·ª±c Hi·ªán
              </SectionTitle>
              
              <StepsList>
                {recipe.instructions.map((step, index) => (
                  <StepItem key={index} index={index}>
                    <StepContent>{step}</StepContent>
                  </StepItem>
                ))}
              </StepsList>
            </InstructionsSection>

            {/* Chef Information */}
            <ChefSection>
              <SectionTitle>
                <CrownOutlined />
                ƒê·∫ßu B·∫øp
              </SectionTitle>
              
              <ChefInfo>
                <ChefAvatar 
                  src={recipe.chef.avatar} 
                  size={60}
                  icon={<UserOutlined />}
                />
                <ChefDetails>
                  <ChefName>{recipe.chef.name}</ChefName>
                  <ChefTitle>{recipe.chef.title}</ChefTitle>
                </ChefDetails>
              </ChefInfo>
              
              <ChefBio>{recipe.chef.bio}</ChefBio>
              
              <TagsSection>
                {recipe.tags.map((tag, index) => (
                  <RecipeTag key={index}>{tag}</RecipeTag>
                ))}
              </TagsSection>
            </ChefSection>
          </MainContent>

          {/* Sidebar */}
          <Sidebar>
            {/* Ingredients */}
            <IngredientsCard title="ü•ò Nguy√™n Li·ªáu">
              <IngredientsList>
                {recipe.ingredients.map((ingredient, index) => (
                  <IngredientItem key={index} index={index}>
                    <IngredientIcon />
                    <IngredientText>
                      <strong>{ingredient.amount}</strong> {ingredient.name}
                    </IngredientText>
                  </IngredientItem>
                ))}
              </IngredientsList>
            </IngredientsCard>

            {/* Nutrition */}
            <NutritionCard title="üìä Dinh D∆∞·ª°ng (1 ph·∫ßn)">
              <NutritionGrid>
                <NutritionItem>
                  <NutritionValue>{recipe.nutrition.calories}</NutritionValue>
                  <NutritionLabel>Calories</NutritionLabel>
                </NutritionItem>
                <NutritionItem>
                  <NutritionValue>{recipe.nutrition.protein}</NutritionValue>
                  <NutritionLabel>Protein</NutritionLabel>
                </NutritionItem>
                <NutritionItem>
                  <NutritionValue>{recipe.nutrition.carbs}</NutritionValue>
                  <NutritionLabel>Carbs</NutritionLabel>
                </NutritionItem>
                <NutritionItem>
                  <NutritionValue>{recipe.nutrition.fat}</NutritionValue>
                  <NutritionLabel>Ch·∫•t b√©o</NutritionLabel>
                </NutritionItem>
              </NutritionGrid>
            </NutritionCard>

            {/* Rating & Actions */}
            <RatingSection>
              <RatingDisplay>
                <RatingValue>{recipe.rating}</RatingValue>
                <Rate 
                  disabled 
                  value={recipe.rating} 
                  style={{ color: '#ff8c00', fontSize: '1.2rem' }} 
                />
                <RatingCount>{recipe.reviewCount} ƒë√°nh gi√°</RatingCount>
              </RatingDisplay>

              <div style={{ marginBottom: '20px' }}>
                <div style={{ marginBottom: '10px', fontWeight: '600', color: '#2d5016' }}>
                  ƒê√°nh gi√° c·ªßa b·∫°n:
                </div>
                <Rate 
                  value={userRating}
                  onChange={handleRatingChange}
                  style={{ color: '#ff8c00', fontSize: '1.2rem' }}
                />
              </div>

              <ActionButtons>
                <ActionButton 
                  primary
                  icon={<HeartOutlined />}
                  onClick={handleFavorite}
                  style={{ 
                    background: isFavorited ? 
                      'linear-gradient(135deg, #ff6b6b, #ff8e8e) !important' : 
                      'linear-gradient(135deg, #2d5016, #4a7c59) !important'
                  }}
                >
                  {isFavorited ? 'ƒê√£ y√™u th√≠ch' : 'Y√™u th√≠ch'}
                </ActionButton>
                
                <ActionButton 
                  icon={<ShareAltOutlined />}
                  onClick={handleShare}
                >
                  Chia s·∫ª
                </ActionButton>
              </ActionButtons>
            </RatingSection>
          </Sidebar>
        </ContentSection>
      </DetailContainer>
    </ResponsiveWrapper>
  );
};

export default RecipeDetailComponent;
